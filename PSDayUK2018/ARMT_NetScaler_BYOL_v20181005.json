{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "West Europe"
        },
        "virtualMachineName": {
            "type": "string",
            "allowedValues": [
                "ns01",
                "ns02",
                "ns03",
                "ns04"
            ]
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_A4_v2"
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "adm-demo"
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "RG-PSARM-vnet"
        },
		"virtualNetworkAddressPrefix": {
			"type": "string",
			"defaultValue": "10.1.1.0/24"
		},
        "adminPassword": {
            "type": "securestring"
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "AS-PSARM-NS"
        },
        "nic1SubnetName": {
            "type": "string",
            "defaultValue": "sn-internal"
        },
        "nic1SubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.1.4.0/25"
        },
        "nic2SubnetName": {
            "type": "string",
            "defaultValue": "sn-external"
        },
        "nic2SubnetAddressPrefix": {
            "type": "string",
            "defaultValue": "10.1.4.128/25"
        },
        "networkSecurityGroup1Name": {
            "type": "string",
            "defaultValue": "nsg-ns-externa1"
        },
        "networkSecurityGroup2Name": {
            "type": "string",
            "defaultValue": "nsg-ns-internal"
        },
    },
    "variables": {
        "vnetId": "[resourceId('RG-PSARM','Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef1": "[concat(variables('vnetId'), '/subnets/', parameters('nic1SubnetName'))]",
        "subnetRef2": "[concat(variables('vnetId'), '/subnets/', parameters('nic2SubnetName'))]",
        "nic1Name": "[concat(parameters('virtualMachineName'), '-nic1')]",
        "nic2Name": "[concat(parameters('virtualMachineName'), '-nic2')]",
        "nsg1Id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup1Name'))]",
        "nsg2Id": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroup2Name'))]",
        "PIPName": "[concat(parameters('virtualMachineName'), '-PIP')]"
    },
    "resources": [
        {
            "name": "[parameters('virtualMachineName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Compute/AvailabilitySets/', parameters('availabilitySetName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nic1Name'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nic2Name'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                          "imageReference": {
                            "publisher": "citrix",
                            "offer": "netscalervpx-120",
                            "sku": "netscalerbyol",
                            "version": "latest"
                            },
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
                            "properties":{
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
                            "properties":{
                                "primary": false
                            }
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/AvailabilitySets', parameters('availabilitySetName'))]"
                }
            },
            "plan": {
                "name": "netscalerbyol",
                "publisher": "citrix",
                "product": "netscalervpx-120"
            }
        },
        {
            "name": "[variables('nic1Name')]",
            "type": "Microsoft.Network/NetworkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "NSIP",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef1')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary" : true                            
                        }                    
                    },
                    {
                        "name": "SNIP-Backend",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef1')]"   
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary" : false
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsg1Id')]"
                }
            }
        },
        {
            "name": "[variables('nic2Name')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIpAddresses/', variables('PIPName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "VIP-NSG-Public",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef2')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary" : false,
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('PIPName'))]"
                            }
                        }
                    },
                    {
                        "name": "VIP-LB-SF",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef2')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary" : false
                        }
                    },
                    {
                        "name": "VIP-NSG-Internal",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef2')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary" : true
                        }
                    },
                    {
                        "name": "SNIP-Public",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef2')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary" : false
                        }
                    },
                ],
                "networkSecurityGroup": {
                    "id": "[variables('nsg2Id')]"
                }
            }
        },
        {
            "apiVersion": "2018-04-01",
            "name": "[parameters('virtualNetworkName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('nic1SubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('nic1SubnetAddressPrefix')]"
                        }
                    },
                    {
                        "name": "[parameters('nic2SubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('nic2SubnetAddressPrefix')]"
                        }
                    }
                ],
                "enableDdosProtection": "false"
            }
        },
        {
            "name": "[parameters('networkSecurityGroup1Name')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                {
                    "name": "allow_HTTP_80",
                    "properties": {
                        "priority": 1001,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceApplicationSecurityGroups": [],
                        "destinationApplicationSecurityGroups": [],
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "80"
                    }
                },
                {
                    "name": "allow_SSL_443",
                    "properties": {
                        "priority": 1002,
                        "protocol": "*",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceApplicationSecurityGroups": [],
                        "destinationApplicationSecurityGroups": [],
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "443"
                    }
                },
                {
                    "name": "default-allow-ssh",
                    "properties": {
                        "priority": 1000,
                        "protocol": "TCP",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceApplicationSecurityGroups": [],
                        "destinationApplicationSecurityGroups": [],
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "22"
                    }
                }
            ]
            },
            "tags": {}
        },
        {
            "name": "[parameters('networkSecurityGroup2Name')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                {
                    "name": "allow_SSL_443",
                    "properties": {
                        "priority": 1002,
                        "protocol": "*",
                        "access": "Allow",
                        "direction": "Inbound",
                        "sourceApplicationSecurityGroups": [],
                        "destinationApplicationSecurityGroups": [],
                        "sourceAddressPrefix": "*",
                        "sourcePortRange": "*",
                        "destinationAddressPrefix": "*",
                        "destinationPortRange": "443"
                    }
                }
            ]
            },
            "tags": {}
        },
        {
            "name": "[variables('PIPName')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2016-09-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIpAllocationMethod": "static"
            }
        },
            {
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/AvailabilitySets",
            "apiVersion": "2017-03-30",
            "location": "[resourceGroup().location]",
            "sku":{
                "name": "Aligned"
            },
            "properties": {
                "PlatformFaultDomainCount": "2",
                "PlatformUpdateDomainCount": "2"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "adminPassword": {
            "type": "string",
            "value": "[parameters('adminPassword')]"
        },
        "virtualMachineName": {
            "type": "string",
            "value": "[parameters('virtualMachineName')]"
        }
    }
}